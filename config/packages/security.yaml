security:
  encoders:
    App\Entity\User:
      algorithm: bcrypt
  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    users_in_memory: { memory: null }
    chain_provider:
      chain:
        providers: [in_database, admin_database]
    in_database:
      entity: { class: App\Entity\User, property: email }
    admin_database:
      entity: { class: App\Entity\Admin, property: email }
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      anonymous: lazy
      provider: in_database

      form_login:
        login_path: login
        check_path: login

      logout:
        path: logout
        target: app
    admin:
      pattern: ^/secretAdminLogin
      provider: admin_database
      anonymous: lazy

      form_login:
        login_path: secretAdminLogin
        check_path: secretAdminLogin

      logout:
        path: logout
        target: app
    # activate different ways to authenticate
    # https://symfony.com/doc/current/security.html#firewalls-authentication

    # https://symfony.com/doc/current/security/impersonating_user.html
    # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: ^/admin, roles: ROLE_ADMIN }
    - { path: ^/editOffre, roles: ROLE_USER }
    - { path: ^/addOffre, roles: ROLE_USER }
    - { path: ^/manageOffre, roles: ROLE_USER }
